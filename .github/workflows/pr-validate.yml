name: PR Validation

on:
  pull_request:
    branches: ["main"]

defaults:
  run:
    shell: bash

jobs:
  validate-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Hugo
        run: |
          LATEST_HUGO=$(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest | jq -r .tag_name | sed 's/^v//')
          echo "Installing Hugo ${LATEST_HUGO}"
          INSTALL_DIR="${HOME}/.local/hugo"
          mkdir -p "$INSTALL_DIR"
          curl -sL "https://github.com/gohugoio/hugo/releases/download/v${LATEST_HUGO}/hugo_extended_${LATEST_HUGO}_linux-amd64.tar.gz" \
          | tar -xz -C "$INSTALL_DIR"
          echo "$INSTALL_DIR" >> "${GITHUB_PATH}"


      - name: Restore Hugo Cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: hugo-${{ hashFiles('**/*.md', 'hugo.toml', 'config.toml') }}
          restore-keys: hugo-

      - name: Build with Hugo
        run: |
          hugo \
            --gc \
            --minify \
            --buildDrafts \
            --buildFuture \
            --cacheDir "${{ runner.temp }}/hugo_cache"

      - name: Verify Build Output
        run: |
          if [ ! -d "./public" ]; then
            echo "❌ Error: No public directory generated"
            exit 1
          fi

          HTML_COUNT=$(find ./public -name "*.html" | wc -l)
          if [ "$HTML_COUNT" -eq 0 ]; then
            echo "❌ Error: No HTML files generated"
            exit 1
          fi

          [ -f "./public/index.html" ] || (echo "❌ Missing index.html" && exit 1)
          [ -f "./public/404.html" ] || echo "⚠️ Warning: 404 page missing"

      - name: Save Hugo Cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: hugo-${{ hashFiles('**/*.md', 'hugo.toml', 'config.toml') }}

      - name: Check Links (Optional)
        continue-on-error: true
        run: |
          sudo apt-get update && sudo apt-get install -y lychee
          # Run link check, ignore external URLs to avoid flaky failures
          lychee --base ./public --exclude-mail --offline ./public/**/*.html